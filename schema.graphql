# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

interface PrismicDocument {
    "Marks the document as previewable using Prismic's preview system. Include this field if updates to the document should be previewable by content editors before publishing. **Note: the value of this field is not stable and should not be used directly**."
    _previewable: ID!
    "Alternate languages for the document."
    alternate_languages: [PrismicLinkType!]!
    "The document's data object without transformations exactly as it comes from the Prismic API."
    dataRaw: JSON!
    "The document's data object without transformations. The object is stringified via `JSON.stringify` to eliminate the need to declare subfields."
    dataString: String @deprecated(reason : "Use `dataRaw` instead which returns JSON.")
    "The document's initial publication date."
    first_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    "The document's Prismic API URL."
    href: String
    "Globally unique identifier. Note that this differs from the `prismicID` field."
    id: ID!
    "The document's language."
    lang: String!
    "The document's most recent publication date"
    last_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    "The document's Prismic ID."
    prismicId: ID!
    "The document's list of tags."
    tags: [String!]!
    "The document's Prismic API ID type."
    type: String!
    "The document's URL derived via the link resolver."
    url: String
}

interface PrismicImageInterface {
    "The image's alternative text."
    alt: String
    "The image's copyright text."
    copyright: String
    "The image's dimensions."
    dimensions: PrismicImageDimensionsType
    fixed: PrismicImageFixedType
    fluid: PrismicImageFluidType
    "The locally downloaded image if `shouldNormalizeImage` returns true."
    localFile: File
    "The image's URL on Prismic's CDN."
    url: String
}

interface PrismicSliceType {
    "The slice label."
    slice_label: String
    "The slice type API ID."
    slice_type: String!
}

union PrismicAllDocumentTypes = PrismicAbout | PrismicPost

union PrismicPostBodySlicesType = PrismicPostBodyHr | PrismicPostBodyImage | PrismicPostBodyQuote | PrismicPostBodyText

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason : "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    nodes: [Directory!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    nodes: [Directory!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason : "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    childImageSharp: ImageSharp
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
    url: String
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    nodes: [File!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    nodes: [File!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    gatsbyImageData(
        "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
        background: String = "rgba(0,0,0,0)",
        "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
        blurredOptions: BlurredOptions,
        """

        The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG" and "WEBP".
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [ImageFormat] = [WEBP],
        "If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
        height: Int,
        "Options to pass to sharp when generating JPG images."
        jpgOptions: JPGOptions,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FLUID: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: ImageLayout = FIXED,
        """

        If set, the generated image is a maximum of this height, cropping if necessary.
        If the image layout is "constrained" then the image will be limited to this height.
        If the aspect ratio of the image is different than the source, then the image will be cropped.
        """
        maxHeight: Int,
        """

        Maximum display width of generated files.
        The actual largest image resolution will be this value multipled by the largest value in outputPixelDensities
        This only applies when layout = FLUID or CONSTRAINED. For other layout types, use "width"
    """
        maxWidth: Int,
        """

        A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, 3x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set "background" to use a fixed background color.
        """
        placeholder: ImagePlaceholder = BLURRED,
        "Options to pass to sharp when generating PNG images."
        pngOptions: PNGOptions,
        "The default quality. This is overriden by any format-specific options"
        quality: Int,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
        container will be the full width of the screen. In these cases we will generate an appropriate value.
        """
        sizes: String = "",
        "Options for traced placeholder SVGs. You also should set placeholder to \"SVG\"."
        tracedSVGOptions: Potrace,
        "Options to pass to sharp to control cropping and other image manipulations."
        transformOptions: TransformOptions,
        "Options to pass to sharp when generating WebP images."
        webpOptions: WebPOptions,
        """

        The display width of the generated image.
        The actual largest image resolution will be this value multipled by the largest value in outputPixelDensities
        Ignored if layout = FLUID or CONSTRAINED, where you should use "maxWidth" instead.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
    resolutions(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResolutions @deprecated(reason : "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
    sizes(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpSizes @deprecated(reason : "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type ImageSharpResolutions {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpSizes {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

type PrismicAbout implements Node & PrismicDocument {
    _previewable: ID!
    alternate_languages: [PrismicLinkType!]!
    children: [Node!]!
    data: PrismicAboutDataType
    dataRaw: JSON!
    dataString: String!
    first_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    href: String!
    id: ID!
    internal: Internal!
    lang: String!
    last_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    parent: Node
    prismicId: ID!
    tags: [String!]!
    type: String!
    url: String
}

type PrismicAboutCareersGroupType {
    company_name: String
    description: PrismicStructuredTextType
    end_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    from_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type PrismicAboutConnection {
    distinct(field: PrismicAboutFieldsEnum!): [String!]!
    edges: [PrismicAboutEdge!]!
    group(field: PrismicAboutFieldsEnum!, limit: Int, skip: Int): [PrismicAboutGroupConnection!]!
    nodes: [PrismicAbout!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicAboutDataType {
    careers: [PrismicAboutCareersGroupType]
    description: PrismicStructuredTextType
    github_link: PrismicLinkType
    name: PrismicStructuredTextType
    profile: PrismicImageType
}

type PrismicAboutEdge {
    next: PrismicAbout
    node: PrismicAbout!
    previous: PrismicAbout
}

type PrismicAboutGroupConnection {
    edges: [PrismicAboutEdge!]!
    field: String!
    fieldValue: String
    nodes: [PrismicAbout!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

"Embed videos, songs, tweets, slices, etc."
type PrismicEmbedType {
    "The ID of the resource author. Fetched via oEmbed data."
    author_id: ID
    "The name of the author/owner of the resource. Fetched via oEmbed data."
    author_name: String
    "A URL for the author/owner of the resource. Fetched via oEmbed data."
    author_url: String
    "The suggested cache lifetime for this resource, in seconds. Consumers may choose to use this value or not. Fetched via oEmbed data."
    cache_age: String
    "A description for the resource."
    description: String
    "The URL of the resource."
    embed_url: String
    "The height in pixel of the resource. Fetched via oEmbed data."
    height: Int
    "The HTML required to display the resource. The HTML should have no padding or margins. Consumers may wish to load the HTML in an off-domain iframe to avoid XSS vulnerabilities. Fetched via oEmbed data."
    html: String
    "The ID of the resource media. Fetched via oEmbed data."
    media_id: ID
    "The name of the resource."
    name: String
    "The name of the resource provider. Fetched via oEmbed data."
    provider_name: String
    "The URL of the resource provider. Fetched via oEmbed data."
    provider_url: String
    "The width of the resource's thumbnail. Fetched via oEmbed data."
    thumbnail_height: Int
    "A URL to a thumbnail image representing the resource. Fetched via oEmbed data."
    thumbnail_url: String
    "The width of the resource's thumbnail. Fetched via oEmbed data."
    thumbnail_width: Int
    "A text title, describing the resource. Fetched via oEmbed data."
    title: String
    "The resource type. Fetched via oEmbed data."
    type: String
    "The source URL of the resource. Fetched via oEmbed data."
    url: String
    "The oEmbed version number."
    version: String
    "The width in pixel of the resource. Fetched via oEmbed data."
    width: Int
}

"A field for storing geo-coordinates."
type PrismicGeoPointType {
    "The latitude value of the geo-coordinate."
    latitude: Float
    "The longitude value of the geo-coordinate."
    longitude: Float
}

"Dimensions for images."
type PrismicImageDimensionsType {
    "Height of the image in pixels."
    height: Int!
    "Width of the image in pixels."
    width: Int!
}

type PrismicImageFixedType {
    base64: String!
    height: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String!
    srcWebp: String!
    width: Int!
}

type PrismicImageFluidType {
    aspectRatio: Float!
    base64: String!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String!
    srcWebp: String!
}

"An image thumbnail with constraints."
type PrismicImageThumbnailType implements PrismicImageInterface {
    alt: String
    copyright: String
    dimensions: PrismicImageDimensionsType
    fixed(height: Int, imgixParams: ImgixUrlParamsInput = {}, placeholderImgixParams: ImgixUrlParamsInput = {}, width: Int = 400): PrismicImageFixedType
    fluid(imgixParams: ImgixUrlParamsInput = {}, maxHeight: Int, maxWidth: Int = 800, placeholderImgixParams: ImgixUrlParamsInput = {}, srcSetBreakpoints: [Int]): PrismicImageFluidType
    localFile: File
    url(imgixParams: ImgixUrlParamsInput = {}): String
}

"An image field with optional constrained thumbnails."
type PrismicImageType implements PrismicImageInterface {
    alt: String
    copyright: String
    dimensions: PrismicImageDimensionsType
    fixed(height: Int, imgixParams: ImgixUrlParamsInput = {}, placeholderImgixParams: ImgixUrlParamsInput = {}, width: Int = 400): PrismicImageFixedType
    fluid(imgixParams: ImgixUrlParamsInput = {}, maxHeight: Int, maxWidth: Int = 800, placeholderImgixParams: ImgixUrlParamsInput = {}, srcSetBreakpoints: [Int]): PrismicImageFluidType
    localFile: File
    thumbnails: PrismicImageThumbnailsType
    url(imgixParams: ImgixUrlParamsInput = {}): String
}

"Link to web, media, and internal content."
type PrismicLinkType {
    "If a Document link, the linked document."
    document: PrismicAllDocumentTypes
    "If a Document link, the linked document's Prismic ID."
    id: ID
    "If a Document link, `true` if linked document does not exist, `false` otherwise."
    isBroken: Boolean
    "If a Document link, the linked document's language."
    lang: String
    "The type of link."
    link_type: PrismicLinkTypes!
    "The field's value without transformations exactly as it comes from the Prismic API."
    raw: JSON
    "If a Media link, the size of the file."
    size: Int
    "If a Document link, the linked document's slug."
    slug: String
    "If a Document link, the linked document's list of tags."
    tags: [String]
    "The link's target."
    target: String
    "If a Document link, the linked document's Prismic custom type API ID"
    type: String
    "If a Document link, the linked document's UID."
    uid: String
    "The document's URL derived via the link resolver."
    url: String
}

type PrismicPost implements Node & PrismicDocument {
    _previewable: ID!
    alternate_languages: [PrismicLinkType!]!
    children: [Node!]!
    data: PrismicPostDataType
    dataRaw: JSON!
    dataString: String!
    first_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    href: String!
    id: ID!
    internal: Internal!
    lang: String!
    last_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    parent: Node
    prismicId: ID!
    tags: [String!]!
    type: String!
    uid: String
    url: String
}

type PrismicPostBodyHr implements Node & PrismicSliceType {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
    slice_label: String
    slice_type: String!
}

type PrismicPostBodyHrConnection {
    distinct(field: PrismicPostBodyHrFieldsEnum!): [String!]!
    edges: [PrismicPostBodyHrEdge!]!
    group(field: PrismicPostBodyHrFieldsEnum!, limit: Int, skip: Int): [PrismicPostBodyHrGroupConnection!]!
    nodes: [PrismicPostBodyHr!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicPostBodyHrEdge {
    next: PrismicPostBodyHr
    node: PrismicPostBodyHr!
    previous: PrismicPostBodyHr
}

type PrismicPostBodyHrGroupConnection {
    edges: [PrismicPostBodyHrEdge!]!
    field: String!
    fieldValue: String
    nodes: [PrismicPostBodyHr!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicPostBodyImage implements Node & PrismicSliceType {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
    primary: PrismicPostBodyImagePrimaryType
    slice_label: String
    slice_type: String!
}

type PrismicPostBodyImageConnection {
    distinct(field: PrismicPostBodyImageFieldsEnum!): [String!]!
    edges: [PrismicPostBodyImageEdge!]!
    group(field: PrismicPostBodyImageFieldsEnum!, limit: Int, skip: Int): [PrismicPostBodyImageGroupConnection!]!
    nodes: [PrismicPostBodyImage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicPostBodyImageEdge {
    next: PrismicPostBodyImage
    node: PrismicPostBodyImage!
    previous: PrismicPostBodyImage
}

type PrismicPostBodyImageGroupConnection {
    edges: [PrismicPostBodyImageEdge!]!
    field: String!
    fieldValue: String
    nodes: [PrismicPostBodyImage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicPostBodyImagePrimaryType {
    image: PrismicImageType
}

type PrismicPostBodyQuote implements Node & PrismicSliceType {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
    primary: PrismicPostBodyQuotePrimaryType
    slice_label: String
    slice_type: String!
}

type PrismicPostBodyQuoteConnection {
    distinct(field: PrismicPostBodyQuoteFieldsEnum!): [String!]!
    edges: [PrismicPostBodyQuoteEdge!]!
    group(field: PrismicPostBodyQuoteFieldsEnum!, limit: Int, skip: Int): [PrismicPostBodyQuoteGroupConnection!]!
    nodes: [PrismicPostBodyQuote!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicPostBodyQuoteEdge {
    next: PrismicPostBodyQuote
    node: PrismicPostBodyQuote!
    previous: PrismicPostBodyQuote
}

type PrismicPostBodyQuoteGroupConnection {
    edges: [PrismicPostBodyQuoteEdge!]!
    field: String!
    fieldValue: String
    nodes: [PrismicPostBodyQuote!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicPostBodyQuotePrimaryType {
    quote: PrismicStructuredTextType
}

type PrismicPostBodyText implements Node & PrismicSliceType {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
    primary: PrismicPostBodyTextPrimaryType
    slice_label: String
    slice_type: String!
}

type PrismicPostBodyTextConnection {
    distinct(field: PrismicPostBodyTextFieldsEnum!): [String!]!
    edges: [PrismicPostBodyTextEdge!]!
    group(field: PrismicPostBodyTextFieldsEnum!, limit: Int, skip: Int): [PrismicPostBodyTextGroupConnection!]!
    nodes: [PrismicPostBodyText!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicPostBodyTextEdge {
    next: PrismicPostBodyText
    node: PrismicPostBodyText!
    previous: PrismicPostBodyText
}

type PrismicPostBodyTextGroupConnection {
    edges: [PrismicPostBodyTextEdge!]!
    field: String!
    fieldValue: String
    nodes: [PrismicPostBodyText!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicPostBodyTextPrimaryType {
    content: PrismicStructuredTextType
}

type PrismicPostConnection {
    distinct(field: PrismicPostFieldsEnum!): [String!]!
    edges: [PrismicPostEdge!]!
    group(field: PrismicPostFieldsEnum!, limit: Int, skip: Int): [PrismicPostGroupConnection!]!
    nodes: [PrismicPost!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicPostDataType {
    body: [PrismicPostBodySlicesType]
    category: String
    cover_image: PrismicImageType
    migrated_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    title: PrismicStructuredTextType
}

type PrismicPostEdge {
    next: PrismicPost
    node: PrismicPost!
    previous: PrismicPost
}

type PrismicPostGroupConnection {
    edges: [PrismicPostEdge!]!
    field: String!
    fieldValue: String
    nodes: [PrismicPost!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

"A text field with formatting options."
type PrismicStructuredTextType {
    "The HTML value of the text using `prismic-dom` and the HTML serializer."
    html: String
    "The field's value without transformations exactly as it comes from the Prismic API."
    raw: JSON
    "The plain text value of the text using `prismic-dom`."
    text: String
}

type Query {
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allPrismicAbout(filter: PrismicAboutFilterInput, limit: Int, skip: Int, sort: PrismicAboutSortInput): PrismicAboutConnection!
    allPrismicPost(filter: PrismicPostFilterInput, limit: Int, skip: Int, sort: PrismicPostSortInput): PrismicPostConnection!
    allPrismicPostBodyHr(filter: PrismicPostBodyHrFilterInput, limit: Int, skip: Int, sort: PrismicPostBodyHrSortInput): PrismicPostBodyHrConnection!
    allPrismicPostBodyImage(filter: PrismicPostBodyImageFilterInput, limit: Int, skip: Int, sort: PrismicPostBodyImageSortInput): PrismicPostBodyImageConnection!
    allPrismicPostBodyQuote(filter: PrismicPostBodyQuoteFilterInput, limit: Int, skip: Int, sort: PrismicPostBodyQuoteSortInput): PrismicPostBodyQuoteConnection!
    allPrismicPostBodyText(filter: PrismicPostBodyTextFilterInput, limit: Int, skip: Int, sort: PrismicPostBodyTextSortInput): PrismicPostBodyTextConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput, url: StringQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput, resolutions: ImageSharpResolutionsFilterInput, sizes: ImageSharpSizesFilterInput): ImageSharp
    prismicAbout(_previewable: IDQueryOperatorInput, alternate_languages: PrismicLinkTypeFilterListInput, children: NodeFilterListInput, data: PrismicAboutDataTypeFilterInput, dataRaw: JSONQueryOperatorInput, dataString: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, href: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, lang: StringQueryOperatorInput, last_publication_date: DateQueryOperatorInput, parent: NodeFilterInput, prismicId: IDQueryOperatorInput, tags: StringQueryOperatorInput, type: StringQueryOperatorInput, url: StringQueryOperatorInput): PrismicAbout
    prismicPost(_previewable: IDQueryOperatorInput, alternate_languages: PrismicLinkTypeFilterListInput, children: NodeFilterListInput, data: PrismicPostDataTypeFilterInput, dataRaw: JSONQueryOperatorInput, dataString: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, href: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, lang: StringQueryOperatorInput, last_publication_date: DateQueryOperatorInput, parent: NodeFilterInput, prismicId: IDQueryOperatorInput, tags: StringQueryOperatorInput, type: StringQueryOperatorInput, uid: StringQueryOperatorInput, url: StringQueryOperatorInput): PrismicPost
    prismicPostBodyHr(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, slice_label: StringQueryOperatorInput, slice_type: StringQueryOperatorInput): PrismicPostBodyHr
    prismicPostBodyImage(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, primary: PrismicPostBodyImagePrimaryTypeFilterInput, slice_label: StringQueryOperatorInput, slice_type: StringQueryOperatorInput): PrismicPostBodyImage
    prismicPostBodyQuote(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, primary: PrismicPostBodyQuotePrimaryTypeFilterInput, slice_label: StringQueryOperatorInput, slice_type: StringQueryOperatorInput): PrismicPostBodyQuote
    prismicPostBodyText(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, primary: PrismicPostBodyTextPrimaryTypeFilterInput, slice_label: StringQueryOperatorInput, slice_type: StringQueryOperatorInput): PrismicPostBodyText
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, context: SitePageContextFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    parent: Node
    pathPrefix: String
    polyfill: Boolean
    port: Int
    siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    nodes: [Site!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteGroupConnection {
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    nodes: [Site!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    componentPath: String
    context: SitePageContext
    id: ID!
    internal: Internal!
    internalComponentName: String!
    isCreatedByStatefulCreatePages: Boolean
    matchPath: String
    parent: Node
    path: String!
    pluginCreator: SitePlugin
    pluginCreatorId: String
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePageContext {
    category: String
    hasNext: Boolean
    hasPrevious: Boolean
    uid: String
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: SitePluginPackageJson
    parent: Node
    pluginFilepath: String
    pluginOptions: SitePluginPluginOptions
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePluginPackageJson {
    dependencies: [SitePluginPackageJsonDependencies]
    description: String
    devDependencies: [SitePluginPackageJsonDevDependencies]
    keywords: [String]
    license: String
    main: String
    name: String
    peerDependencies: [SitePluginPackageJsonPeerDependencies]
    version: String
}

type SitePluginPackageJsonDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonDevDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonPeerDependencies {
    name: String
    version: String
}

type SitePluginPluginOptions {
    allExtensions: Boolean
    anonymize: Boolean
    background_color: String
    base64Width: Int
    cacheDigest: String
    cache_busting_mode: String
    createLinkInHead: Boolean
    crossOrigin: String
    defaultQuality: Int
    display: String
    failOnError: Boolean
    feeds: [SitePluginPluginOptionsFeeds]
    head: Boolean
    icon: String
    imageImgixParams: SitePluginPluginOptionsImageImgixParams
    imagePlaceholderImgixParams: SitePluginPluginOptionsImagePlaceholderImgixParams
    include_favicon: Boolean
    isTSX: Boolean
    jsxPragma: String
    legacy: Boolean
    name: String
    output: String
    pageTransitionDelay: Int
    path: String
    pathCheck: Boolean
    policy: [SitePluginPluginOptionsPolicy]
    prismicToolbar: Boolean
    query: String
    repositoryName: String
    respectDNT: Boolean
    schemas: SitePluginPluginOptionsSchemas
    short_name: String
    start_url: String
    stripMetadata: Boolean
    theme_color: String
    theme_color_in_head: Boolean
    trackingId: String
}

type SitePluginPluginOptionsFeeds {
    link: String
    output: String
    query: String
    title: String
}

type SitePluginPluginOptionsImageImgixParams {
    auto: String
    fit: String
    q: Int
}

type SitePluginPluginOptionsImagePlaceholderImgixParams {
    blur: Int
    q: Int
    w: Int
}

type SitePluginPluginOptionsPolicy {
    allow: String
    sitemap: String
    userAgent: String
}

type SitePluginPluginOptionsSchemas {
    about: SitePluginPluginOptionsSchemasAbout
    post: SitePluginPluginOptionsSchemasPost
}

type SitePluginPluginOptionsSchemasAbout {
    Main: SitePluginPluginOptionsSchemasAboutMain
}

type SitePluginPluginOptionsSchemasAboutMain {
    careers: SitePluginPluginOptionsSchemasAboutMainCareers
    description: SitePluginPluginOptionsSchemasAboutMainDescription
    github_link: SitePluginPluginOptionsSchemasAboutMainGithub_link
    name: SitePluginPluginOptionsSchemasAboutMainName
    profile: SitePluginPluginOptionsSchemasAboutMainProfile
}

type SitePluginPluginOptionsSchemasAboutMainCareers {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfig
    type: String
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfig {
    fields: SitePluginPluginOptionsSchemasAboutMainCareersConfigFields
    label: String
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfigFields {
    company_name: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsCompany_name
    description: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsDescription
    end_date: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsEnd_date
    from_date: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFrom_date
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsCompany_name {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsCompany_nameConfig
    type: String
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsCompany_nameConfig {
    label: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsDescription {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsDescriptionConfig
    type: String
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsDescriptionConfig {
    label: String
    multi: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsEnd_date {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsEnd_dateConfig
    type: String
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsEnd_dateConfig {
    label: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFrom_date {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFrom_dateConfig
    type: String
}

type SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFrom_dateConfig {
    label: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasAboutMainDescription {
    config: SitePluginPluginOptionsSchemasAboutMainDescriptionConfig
    type: String
}

type SitePluginPluginOptionsSchemasAboutMainDescriptionConfig {
    label: String
    placeholder: String
    single: String
}

type SitePluginPluginOptionsSchemasAboutMainGithub_link {
    config: SitePluginPluginOptionsSchemasAboutMainGithub_linkConfig
    type: String
}

type SitePluginPluginOptionsSchemasAboutMainGithub_linkConfig {
    label: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasAboutMainName {
    config: SitePluginPluginOptionsSchemasAboutMainNameConfig
    type: String
}

type SitePluginPluginOptionsSchemasAboutMainNameConfig {
    label: String
    placeholder: String
    single: String
}

type SitePluginPluginOptionsSchemasAboutMainProfile {
    config: SitePluginPluginOptionsSchemasAboutMainProfileConfig
    type: String
}

type SitePluginPluginOptionsSchemasAboutMainProfileConfig {
    constraint: SitePluginPluginOptionsSchemasAboutMainProfileConfigConstraint
    label: String
}

type SitePluginPluginOptionsSchemasAboutMainProfileConfigConstraint {
    height: Int
    width: Int
}

type SitePluginPluginOptionsSchemasPost {
    Main: SitePluginPluginOptionsSchemasPostMain
}

type SitePluginPluginOptionsSchemasPostMain {
    body: SitePluginPluginOptionsSchemasPostMainBody
    category: SitePluginPluginOptionsSchemasPostMainCategory
    cover_image: SitePluginPluginOptionsSchemasPostMainCover_image
    migrated_date: SitePluginPluginOptionsSchemasPostMainMigrated_date
    title: SitePluginPluginOptionsSchemasPostMainTitle
    uid: SitePluginPluginOptionsSchemasPostMainUid
}

type SitePluginPluginOptionsSchemasPostMainBody {
    config: SitePluginPluginOptionsSchemasPostMainBodyConfig
    fieldset: String
    type: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfig {
    choices: SitePluginPluginOptionsSchemasPostMainBodyConfigChoices
    labels: SitePluginPluginOptionsSchemasPostMainBodyConfigLabels
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoices {
    hr: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesHr
    image: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImage
    quote: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuote
    text: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesText
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesHr {
    description: String
    display: String
    fieldset: String
    icon: String
    type: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImage {
    description: String
    display: String
    fieldset: String
    icon: String
    non_repeat: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeat
    type: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeat {
    image: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImage
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImage {
    config: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageConfig
    type: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageConfig {
    constraint: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageConfigConstraint
    label: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageConfigConstraint {
    width: Int
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuote {
    description: String
    fieldset: String
    icon: String
    non_repeat: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeat
    type: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeat {
    quote: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatQuote
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatQuote {
    config: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatQuoteConfig
    type: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatQuoteConfig {
    label: String
    placeholder: String
    single: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesText {
    description: String
    display: String
    fieldset: String
    icon: String
    non_repeat: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeat
    type: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeat {
    content: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatContent
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatContent {
    config: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatContentConfig
    type: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatContentConfig {
    label: String
    multi: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigLabels {
    hr: [SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsHr]
    text: [SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsText]
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsHr {
    display: String
    name: String
}

type SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsText {
    display: String
    name: String
}

type SitePluginPluginOptionsSchemasPostMainCategory {
    config: SitePluginPluginOptionsSchemasPostMainCategoryConfig
    type: String
}

type SitePluginPluginOptionsSchemasPostMainCategoryConfig {
    default_value: String
    label: String
    options: [String]
    placeholder: String
}

type SitePluginPluginOptionsSchemasPostMainCover_image {
    config: SitePluginPluginOptionsSchemasPostMainCover_imageConfig
    type: String
}

type SitePluginPluginOptionsSchemasPostMainCover_imageConfig {
    constraint: SitePluginPluginOptionsSchemasPostMainCover_imageConfigConstraint
    label: String
}

type SitePluginPluginOptionsSchemasPostMainCover_imageConfigConstraint {
    width: Int
}

type SitePluginPluginOptionsSchemasPostMainMigrated_date {
    config: SitePluginPluginOptionsSchemasPostMainMigrated_dateConfig
    type: String
}

type SitePluginPluginOptionsSchemasPostMainMigrated_dateConfig {
    label: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasPostMainTitle {
    config: SitePluginPluginOptionsSchemasPostMainTitleConfig
    type: String
}

type SitePluginPluginOptionsSchemasPostMainTitleConfig {
    label: String
    placeholder: String
    single: String
}

type SitePluginPluginOptionsSchemasPostMainUid {
    config: SitePluginPluginOptionsSchemasPostMainUidConfig
    type: String
}

type SitePluginPluginOptionsSchemasPostMainUidConfig {
    label: String
    placeholder: String
}

type SiteSiteMetadata {
    author: String
    description: String
    siteUrl: String
    title: String
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
    url
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    AUTO
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageLayout {
    CONSTRAINED
    FIXED
    FLUID
}

enum ImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageSharpFieldsEnum {
    children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum PrismicAboutFieldsEnum {
    _previewable
    alternate_languages
    alternate_languages___id
    alternate_languages___isBroken
    alternate_languages___lang
    alternate_languages___link_type
    alternate_languages___raw
    alternate_languages___size
    alternate_languages___slug
    alternate_languages___tags
    alternate_languages___target
    alternate_languages___type
    alternate_languages___uid
    alternate_languages___url
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    dataRaw
    dataString
    data___careers
    data___careers___company_name
    data___careers___description___html
    data___careers___description___raw
    data___careers___description___text
    data___careers___end_date
    data___careers___from_date
    data___description___html
    data___description___raw
    data___description___text
    data___github_link___id
    data___github_link___isBroken
    data___github_link___lang
    data___github_link___link_type
    data___github_link___raw
    data___github_link___size
    data___github_link___slug
    data___github_link___tags
    data___github_link___target
    data___github_link___type
    data___github_link___uid
    data___github_link___url
    data___name___html
    data___name___raw
    data___name___text
    data___profile___alt
    data___profile___copyright
    data___profile___dimensions___height
    data___profile___dimensions___width
    data___profile___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fixed___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___absolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___accessTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___atime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___atimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___base @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___birthTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___birthtime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___birthtimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___blksize @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___blocks @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___changeTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___ctime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___ctimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___dev @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___dir @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___ext @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___extension @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___gid @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___ino @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___mode @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___modifiedTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___mtime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___mtimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___name @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___nlink @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___prettySize @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___publicURL @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___rdev @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___relativeDirectory @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___relativePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___root @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___size @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___sourceInstanceName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___uid @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___localFile___url @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___thumbnails @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___profile___url @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    first_publication_date
    href
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    lang
    last_publication_date
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prismicId
    tags
    type
    url
}

"Types of links."
enum PrismicLinkTypes {
    "Any of the other types"
    Any
    "Internal content"
    Document
    "Internal media content"
    Media
    "URL"
    Web
}

enum PrismicPostBodyHrFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    slice_label
    slice_type
}

enum PrismicPostBodyImageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    primary___image___alt
    primary___image___copyright
    primary___image___dimensions___height
    primary___image___dimensions___width
    primary___image___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fixed___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___absolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___accessTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___atime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___atimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___base @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___birthTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___birthtime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___birthtimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___blksize @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___blocks @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___changeTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___ctime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___ctimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___dev @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___dir @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___ext @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___extension @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___gid @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___ino @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___mode @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___modifiedTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___mtime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___mtimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___name @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___nlink @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___prettySize @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___publicURL @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___rdev @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___relativeDirectory @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___relativePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___root @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___size @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___sourceInstanceName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___uid @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___localFile___url @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___thumbnails @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    primary___image___url @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    slice_label
    slice_type
}

enum PrismicPostBodyQuoteFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    primary___quote___html
    primary___quote___raw
    primary___quote___text
    slice_label
    slice_type
}

enum PrismicPostBodyTextFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    primary___content___html
    primary___content___raw
    primary___content___text
    slice_label
    slice_type
}

enum PrismicPostFieldsEnum {
    _previewable
    alternate_languages
    alternate_languages___id
    alternate_languages___isBroken
    alternate_languages___lang
    alternate_languages___link_type
    alternate_languages___raw
    alternate_languages___size
    alternate_languages___slug
    alternate_languages___tags
    alternate_languages___target
    alternate_languages___type
    alternate_languages___uid
    alternate_languages___url
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    dataRaw
    dataString
    data___category
    data___cover_image___alt
    data___cover_image___copyright
    data___cover_image___dimensions___height
    data___cover_image___dimensions___width
    data___cover_image___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fixed___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___absolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___accessTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___atime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___atimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___base @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___birthTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___birthtime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___birthtimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___blksize @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___blocks @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___changeTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___ctime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___ctimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___dev @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___dir @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___ext @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___extension @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___gid @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___ino @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___mode @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___modifiedTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___mtime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___mtimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___name @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___nlink @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___prettySize @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___publicURL @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___rdev @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___relativeDirectory @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___relativePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___root @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___size @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___sourceInstanceName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___uid @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___localFile___url @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___thumbnails @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___cover_image___url @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___migrated_date
    data___title___html
    data___title___raw
    data___title___text
    first_publication_date
    href
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    lang
    last_publication_date
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prismicId
    tags
    type
    uid
    url
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pathPrefix
    polyfill
    port
    siteMetadata___author
    siteMetadata___description
    siteMetadata___siteUrl
    siteMetadata___title
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    componentPath
    context___category
    context___hasNext
    context___hasPrevious
    context___uid
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    isCreatedByStatefulCreatePages
    matchPath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreatorId
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson___dependencies
    pluginCreator___packageJson___dependencies___name
    pluginCreator___packageJson___dependencies___version
    pluginCreator___packageJson___description
    pluginCreator___packageJson___devDependencies
    pluginCreator___packageJson___devDependencies___name
    pluginCreator___packageJson___devDependencies___version
    pluginCreator___packageJson___keywords
    pluginCreator___packageJson___license
    pluginCreator___packageJson___main
    pluginCreator___packageJson___name
    pluginCreator___packageJson___peerDependencies
    pluginCreator___packageJson___peerDependencies___name
    pluginCreator___packageJson___peerDependencies___version
    pluginCreator___packageJson___version
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions___allExtensions
    pluginCreator___pluginOptions___anonymize
    pluginCreator___pluginOptions___background_color
    pluginCreator___pluginOptions___base64Width
    pluginCreator___pluginOptions___cacheDigest
    pluginCreator___pluginOptions___cache_busting_mode
    pluginCreator___pluginOptions___createLinkInHead
    pluginCreator___pluginOptions___crossOrigin
    pluginCreator___pluginOptions___defaultQuality
    pluginCreator___pluginOptions___display
    pluginCreator___pluginOptions___failOnError
    pluginCreator___pluginOptions___feeds
    pluginCreator___pluginOptions___feeds___link
    pluginCreator___pluginOptions___feeds___output
    pluginCreator___pluginOptions___feeds___query
    pluginCreator___pluginOptions___feeds___title
    pluginCreator___pluginOptions___head
    pluginCreator___pluginOptions___icon
    pluginCreator___pluginOptions___imageImgixParams___auto
    pluginCreator___pluginOptions___imageImgixParams___fit
    pluginCreator___pluginOptions___imageImgixParams___q
    pluginCreator___pluginOptions___imagePlaceholderImgixParams___blur
    pluginCreator___pluginOptions___imagePlaceholderImgixParams___q
    pluginCreator___pluginOptions___imagePlaceholderImgixParams___w
    pluginCreator___pluginOptions___include_favicon
    pluginCreator___pluginOptions___isTSX
    pluginCreator___pluginOptions___jsxPragma
    pluginCreator___pluginOptions___legacy
    pluginCreator___pluginOptions___name
    pluginCreator___pluginOptions___output
    pluginCreator___pluginOptions___pageTransitionDelay
    pluginCreator___pluginOptions___path
    pluginCreator___pluginOptions___pathCheck
    pluginCreator___pluginOptions___policy
    pluginCreator___pluginOptions___policy___allow
    pluginCreator___pluginOptions___policy___sitemap
    pluginCreator___pluginOptions___policy___userAgent
    pluginCreator___pluginOptions___prismicToolbar
    pluginCreator___pluginOptions___query
    pluginCreator___pluginOptions___repositoryName
    pluginCreator___pluginOptions___respectDNT
    pluginCreator___pluginOptions___short_name
    pluginCreator___pluginOptions___start_url
    pluginCreator___pluginOptions___stripMetadata
    pluginCreator___pluginOptions___theme_color
    pluginCreator___pluginOptions___theme_color_in_head
    pluginCreator___pluginOptions___trackingId
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson___dependencies
    packageJson___dependencies___name
    packageJson___dependencies___version
    packageJson___description
    packageJson___devDependencies
    packageJson___devDependencies___name
    packageJson___devDependencies___version
    packageJson___keywords
    packageJson___license
    packageJson___main
    packageJson___name
    packageJson___peerDependencies
    packageJson___peerDependencies___name
    packageJson___peerDependencies___version
    packageJson___version
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions___allExtensions
    pluginOptions___anonymize
    pluginOptions___background_color
    pluginOptions___base64Width
    pluginOptions___cacheDigest
    pluginOptions___cache_busting_mode
    pluginOptions___createLinkInHead
    pluginOptions___crossOrigin
    pluginOptions___defaultQuality
    pluginOptions___display
    pluginOptions___failOnError
    pluginOptions___feeds
    pluginOptions___feeds___link
    pluginOptions___feeds___output
    pluginOptions___feeds___query
    pluginOptions___feeds___title
    pluginOptions___head
    pluginOptions___icon
    pluginOptions___imageImgixParams___auto
    pluginOptions___imageImgixParams___fit
    pluginOptions___imageImgixParams___q
    pluginOptions___imagePlaceholderImgixParams___blur
    pluginOptions___imagePlaceholderImgixParams___q
    pluginOptions___imagePlaceholderImgixParams___w
    pluginOptions___include_favicon
    pluginOptions___isTSX
    pluginOptions___jsxPragma
    pluginOptions___legacy
    pluginOptions___name
    pluginOptions___output
    pluginOptions___pageTransitionDelay
    pluginOptions___path
    pluginOptions___pathCheck
    pluginOptions___policy
    pluginOptions___policy___allow
    pluginOptions___policy___sitemap
    pluginOptions___policy___userAgent
    pluginOptions___prismicToolbar
    pluginOptions___query
    pluginOptions___repositoryName
    pluginOptions___respectDNT
    pluginOptions___short_name
    pluginOptions___start_url
    pluginOptions___stripMetadata
    pluginOptions___theme_color
    pluginOptions___theme_color_in_head
    pluginOptions___trackingId
    resolve
    ssrAPIs
    version
}

enum SortOrderEnum {
    ASC
    DESC
}

input BlurredOptions {
    "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
    toFormat: ImageFormat
    "Width of the generated low-res preview. Default is 20px"
    width: Int
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
    url: StringQueryOperatorInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input IDQueryOperatorInput {
    eq: ID
    in: [ID]
    ne: ID
    nin: [ID]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
    resolutions: ImageSharpResolutionsFilterInput
    sizes: ImageSharpSizesFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpResolutionsFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpSizesFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ImgixUrlParamsInput {
    "Alias for `pdfAnnotation`."
    annotation: Boolean
    "Specifies an aspect ratio to maintain when resizing and cropping the image. [See docs](https://docs.imgix.com/apis/url/size/ar)."
    ar: String
    "Applies automatic enhancements to images. [See docs](https://docs.imgix.com/apis/url/auto)."
    auto: String
    "Alias for `blend`."
    b: String
    "Alias for `blendAlign`."
    ba: String
    "Alias for `blendAlpha`."
    balph: Int
    "Alias for `blendCrop`."
    bc: String
    "Alias for `blendFit`."
    bf: String
    "Colors the background of padded and partially-transparent images. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/bg)."
    bg: String
    "Alias for `blendH`."
    bh: Int
    "Specifies the location of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend)."
    blend: String
    "Changes the blend alignment relative to the parent image. [See docs](https://docs.imgix.com/apis/url/blending/blend-align)."
    blendAlign: String
    "Changes the alpha of the blend image. Default: `100`. [See docs](https://docs.imgix.com/apis/url/blending/blend-alpha)."
    blendAlpha: Int
    "Alias for `blendColor`."
    blendClr: String
    "Specifies a color to use when applying the blend. [See docs](https://docs.imgix.com/apis/url/blending/blend-color)."
    blendColor: String
    "Specifies the type of crop for blend images. [See docs](https://docs.imgix.com/apis/url/blending/blend-crop)."
    blendCrop: String
    "Specifies the fit mode for blend images. Default: `clip`. [See docs](https://docs.imgix.com/apis/url/blending/blend-fit)."
    blendFit: String
    "Adjusts the height of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend-h)."
    blendH: Int
    "Sets the blend mode for a blend image. Default: `overlay`. [See docs](https://docs.imgix.com/apis/url/blending/blend-mode)."
    blendMode: String
    "Applies padding to the blend image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/blending/blend-pad)."
    blendPad: Int
    "Adjusts the size of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend-size)."
    blendSize: String
    "Adjusts the width of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend-w)."
    blendW: Int
    "Adjusts the x-offset of the blend image relative to its parent. Default: `0`. [See docs](https://docs.imgix.com/apis/url/blending/blend-x)."
    blendX: Int
    "Adjusts the y-offset of the blend image relative to its parent. Default: `0`. [See docs](https://docs.imgix.com/apis/url/blending/blend-y)."
    blendY: Int
    "Alias for `blendAlign`."
    blendalign: String
    "Alias for `blendAlpha`."
    blendalpha: Int
    "Alias for `blendColor`."
    blendclr: String
    "Alias for `blendColor`."
    blendcolor: String
    "Alias for `blendCrop`."
    blendcrop: String
    "Alias for `blendFit`."
    blendfit: String
    "Alias for `blendH`."
    blendh: Int
    "Alias for `blendMode`."
    blendmode: String
    "Alias for `blendPad`."
    blendpad: Int
    "Alias for `blendSize`."
    blendsize: String
    "Alias for `blendW`."
    blendw: Int
    "Alias for `blendX`."
    blendx: Int
    "Alias for `blendY`."
    blendy: Int
    "Applies a gaussian blur to an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/blur)."
    blur: Int
    "Alias for `blendMode`."
    bm: String
    "Applies a border to an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border)."
    border: String
    "Sets bottom border of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-bottom)."
    borderBottom: Int
    "Sets left border of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-left)."
    borderLeft: Int
    "Sets the outer radius of the image's border in pixels. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-radius)."
    borderRadius: String
    "Sets the inner radius of the image's border in pixels. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-radius-inner)."
    borderRadiusInner: String
    "Sets right border of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-right)."
    borderRight: Int
    "Sets top border of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-top)."
    borderTop: Int
    "Alias for `blendPad`."
    bp: Int
    "Adjusts the brightness of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/bri)."
    bri: Int
    "Alias for `blendSize`."
    bs: String
    "Alias for `blendW`."
    bw: Int
    "Alias for `blendX`."
    bx: Int
    "Alias for `blendY`."
    by: Int
    "Sets one or more Client-Hints headers. [See docs](https://docs.imgix.com/apis/url/format/ch)."
    ch: String
    "Specifies the output chroma subsampling rate. Default: `420`. [See docs](https://docs.imgix.com/apis/url/format/chromasub)."
    chromasub: Int
    "Limits the number of unique colors in an image. [See docs](https://docs.imgix.com/apis/url/format/colorquant)."
    colorquant: Int
    "Specifies how many colors to include in a palette-extraction response. Default: `6`. [See docs](https://docs.imgix.com/apis/url/color-palette/colors)."
    colors: Int
    "Adjusts the contrast of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/con)."
    con: Int
    "Specifies the radius value for a rounded corner mask. [See docs](https://docs.imgix.com/apis/url/mask/corner-radius)."
    cornerRadius: String
    "Specifies how to crop an image. [See docs](https://docs.imgix.com/apis/url/size/crop)."
    crop: String
    "Specifies the color space of the output image. [See docs](https://docs.imgix.com/apis/url/format/cs)."
    cs: String
    "Forces a URL to use send-file in its response. [See docs](https://docs.imgix.com/apis/url/format/dl)."
    dl: String
    "Sets the DPI value in the EXIF header. [See docs](https://docs.imgix.com/apis/url/format/dpi)."
    dpi: Int
    "Adjusts the device-pixel ratio of the output image. Default: `1`. [See docs](https://docs.imgix.com/apis/url/dpr)."
    dpr: Float
    "Applies a duotone effect to the source image. [See docs](https://docs.imgix.com/apis/url/stylize/duotone)."
    duotone: String
    "Changes the alpha of the duotone effect atop the source image. Default: `100`. [See docs](https://docs.imgix.com/apis/url/stylize/duotone-alpha)."
    duotoneAlpha: Int
    "Adjusts the exposure of the output image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/exp)."
    exp: Int
    "A Unix timestamp specifying a UTC time. Requests made to this URL after that time will output a 404 status code. [See docs](https://docs.imgix.com/apis/url/expires)."
    expires: String
    "Alias for `fit`."
    f: String
    "Selects a face to crop to. [See docs](https://docs.imgix.com/apis/url/face-detection/faceindex)."
    faceindex: Int
    "Adjusts padding around a selected face. Default: `1`. [See docs](https://docs.imgix.com/apis/url/face-detection/facepad)."
    facepad: Float
    "Specifies that face data should be included in output when combined with `fm=json`. [See docs](https://docs.imgix.com/apis/url/face-detection/faces)."
    faces: Int
    "Determines how to fill in additional space created by the fit setting. [See docs](https://docs.imgix.com/apis/url/fill/fill)."
    fill: String
    "Sets the fill color for images with additional space created by the fit setting. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/fill/fill-color)."
    fillColor: String
    "Alias for `fillColor`."
    fillcolor: String
    "Specifies how to map the source image to the output image dimensions. Default: `clip`. [See docs](https://docs.imgix.com/apis/url/size/fit)."
    fit: String
    "Flips an image on a specified axis. [See docs](https://docs.imgix.com/apis/url/rotation/flip)."
    flip: String
    "Changes the format of the output image. [See docs](https://docs.imgix.com/apis/url/format/fm)."
    fm: String
    "Displays crosshairs identifying the location of the set focal point. Default: `false`. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-debug)."
    fpDebug: Boolean
    "Sets the relative horizontal value for the focal point of an image. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-x)."
    fpX: Int
    "Sets the relative vertical value for the focal point of an image. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-y)."
    fpY: Int
    "Sets the relative zoom value for the focal point of an image. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-z)."
    fpZ: Int
    "Adjusts the gamma of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/gam)."
    gam: Int
    "Sets grid colors for the transparency checkerboard grid."
    gridColors: String
    "Sets grid size for the transparency checkerboard grid."
    gridSize: Int
    "Adjusts the height of the output image. [See docs](https://docs.imgix.com/apis/url/size/h)."
    h: Int
    "Alias for `h`."
    height: Int
    "Adjusts the highlights of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/high)."
    high: Int
    "Applies a half-tone effect to the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/htn)."
    htn: Int
    "Adjusts the hue of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/hue)."
    hue: Int
    "Alias for `invert`."
    inv: Boolean
    "Inverts the colors on the source image. Default: `false`. [See docs](https://docs.imgix.com/apis/url/adjustment/invert)."
    invert: Boolean
    "Specifies that the output image should be a lossless variant. Default: `false`. [See docs](https://docs.imgix.com/apis/url/format/lossless)."
    lossless: Boolean
    "Alias for `mark`."
    m: String
    "Alias for `markAlign`."
    ma: String
    "Alias for `markAlpha`."
    malph: Int
    "Specifies the location of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark)."
    mark: String
    "Changes the watermark alignment relative to the parent image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-align)."
    markAlign: String
    "Changes the alpha of the watermark image. Default: `100`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-alpha)."
    markAlpha: Int
    "Changes base URL of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-base)."
    markBase: String
    "Specifies the fit mode for watermark images. Default: `clip`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-fit)."
    markFit: String
    "Adjusts the height of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-h)."
    markH: Int
    "Applies padding to the watermark image. Default: `5`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-pad)."
    markPad: Int
    "Rotates a watermark or tiled watermarks by a specified number of degrees. Default: `0`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-rot)."
    markRot: Float
    "Adjusts the scale of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-scale)."
    markScale: Int
    "Adds tiled watermark. [See docs](https://docs.imgix.com/apis/url/watermark/mark-tile)."
    markTile: String
    "Adjusts the width of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-w)."
    markW: Int
    "Adjusts the x-offset of the watermark image relative to its parent. [See docs](https://docs.imgix.com/apis/url/watermark/mark-x)."
    markX: Int
    "Adjusts the y-offset of the watermark image relative to its parent. [See docs](https://docs.imgix.com/apis/url/watermark/mark-y)."
    markY: Int
    "Alias for `markAlign`."
    markalign: String
    "Alias for `markAlpha`."
    markalpha: Int
    "Alias for `markBase`."
    markbase: String
    "Alias for `markFit`."
    markfit: String
    "Alias for `markH`."
    markh: Int
    "Alias for `markPad`."
    markpad: Int
    "Alias for `markScale`."
    markscale: Int
    "Alias for `markTile`."
    marktile: String
    "Alias for `markW`."
    markw: Int
    "Alias for `markX`."
    markx: Int
    "Alias for `markY`."
    marky: Int
    "Defines the type of mask and specifies the URL if that type is selected. [See docs](https://docs.imgix.com/apis/url/mask)."
    mask: String
    "Colors the background of the transparent mask area of images. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/mask/mask-bg)."
    maskBg: String
    "Alias for `maskBg`."
    maskbg: String
    "Specifies the maximum height of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/max-height)."
    maxH: Int
    "Alias for `maxH`."
    maxHeight: Int
    "Specifies the maximum width of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/max-width)."
    maxW: Int
    "Alias for `maxW`."
    maxWidth: Int
    "Alias for `markBase`."
    mb: String
    "Alias for `markFit`."
    mf: String
    "Alias for `markH`."
    mh: Int
    "Specifies the minimum height of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/min-height)."
    minH: Int
    "Alias for `minH`."
    minHeight: Int
    "Specifies the minimum width of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/min-width)."
    minW: Int
    "Alias for `minW`."
    minWidth: Int
    "Alias for `monochrome`."
    mono: String
    "Applies a monochrome effect to the source image. [See docs](https://docs.imgix.com/apis/url/stylize/monochrome)."
    monochrome: String
    "Alias for `markPad`."
    mp: Int
    "Alias for `markScale`."
    ms: Int
    "Alias for `markTile`."
    mtile: String
    "Alias for `markW`."
    mw: Int
    "Alias for `markX`."
    mx: Int
    "Alias for `markY`."
    my: Int
    "Reduces the noise in an image. Default: `20`. [See docs](https://docs.imgix.com/apis/url/noise-reduction/nr)."
    nr: Int
    "Provides a threshold by which to sharpen an image. Default: `20`. [See docs](https://docs.imgix.com/apis/url/noise-reduction/nrs)."
    nrs: Int
    "Alias for `orient`."
    or: Int
    "Changes the image orientation. [See docs](https://docs.imgix.com/apis/url/rotation/orient)."
    orient: Int
    "Pads an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad)."
    pad: Int
    "Sets bottom padding of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad-bottom)."
    padBottom: Int
    "Sets left padding of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad-left)."
    padLeft: Int
    "Sets right padding of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad-right)."
    padRight: Int
    "Sets top padding of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad-top)."
    padTop: Int
    "Selects a page from a PDF for display. Default: `1`. [See docs](https://docs.imgix.com/apis/url/pdf/page)."
    page: Int
    "Specifies an output format for palette-extraction. [See docs](https://docs.imgix.com/apis/url/color-palette/palette)."
    palette: String
    "Enables or disables PDF annotation. Default: `true`. [See docs](https://docs.imgix.com/apis/url/pdf/pdf-annotation)."
    pdfAnnotation: Boolean
    "Specifies a CSS prefix for all classes in palette-extraction. Default: `image`. [See docs](https://docs.imgix.com/apis/url/color-palette/prefix)."
    prefix: String
    "Applies a pixelation effect to an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/px)."
    px: Int
    "Adjusts the quality of an output image. Default: `75`. [See docs](https://docs.imgix.com/apis/url/format/q)."
    q: Int
    "Crops an image to a specified rectangle. [See docs](https://docs.imgix.com/apis/url/size/rect)."
    rect: String
    "Rotates an image by a specified number of degrees. Default: `0`. [See docs](https://docs.imgix.com/apis/url/rotation/rot)."
    rot: Float
    "Adjusts the saturation of an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/sat)."
    sat: Int
    "Applies a sepia effect to an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/sepia)."
    sepia: Int
    "Adjusts the highlights of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/shad)."
    shad: Float
    "Adjusts the sharpness of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/sharp)."
    sharp: Float
    "Alias for `txt`."
    t: String
    "Alias for `txtAlign`."
    ta: String
    "Alias for `txtColor`."
    tc: String
    "Alias for `txtClip`."
    tcl: String
    "Alias for `txtFont`."
    tf: String
    "Alias for `txtLine`."
    tl: Int
    "Alias for `txtPad`."
    tp: Int
    "Adds checkerboard behind images which support transparency. [See docs](https://docs.imgix.com/apis/url/fill/transparency)."
    transparency: String
    "Trims the source image. [See docs](https://docs.imgix.com/apis/url/trim/trim)."
    trim: String
    "Specifies a trim color on a trim operation. [See docs](https://docs.imgix.com/apis/url/trim/trim-color)."
    trimColor: String
    "Specifies the mean difference on a trim operation. Default: `11`. [See docs](https://docs.imgix.com/apis/url/trim/trim-md)."
    trimMd: Float
    "Pads the area of the source image before trimming. Default: `0`. [See docs](https://docs.imgix.com/apis/url/trim/trim-pad)."
    trimPad: Int
    "Specifies the standard deviation on a trim operation. Default: `10`. [See docs](https://docs.imgix.com/apis/url/trim/trim-sd)."
    trimSd: Float
    "Specifies the tolerance on a trim operation. Default: `0`. [See docs](https://docs.imgix.com/apis/url/trim/trim-tol)."
    trimTol: Float
    "Alias for `trimColor`."
    trimcolor: String
    "Alias for `trimMd`."
    trimmd: Float
    "Alias for `trimPad`."
    trimpad: Int
    "Alias for `trimSd`."
    trimsd: Float
    "Alias for `trimTol`."
    trimtol: Float
    "Alias for `txtShad`."
    tsh: Float
    "Alias for `txtSize`."
    tsz: Int
    "Alias for `txtTrack`."
    tt: Int
    "Sets the text string to render. [See docs](https://docs.imgix.com/apis/url/text/txt)."
    txt: String
    "Sets the vertical and horizontal alignment of rendered text relative to the base image. [See docs](https://docs.imgix.com/apis/url/text/txt-align)."
    txtAlign: String
    "Sets the clipping properties of rendered text. Default: `end`. [See docs](https://docs.imgix.com/apis/url/text/txt-clip)."
    txtClip: String
    "Alias for `txtColor`."
    txtClr: String
    "Specifies the color of rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-color)."
    txtColor: String
    "Specifies the fit approach for rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-fit)."
    txtFit: String
    "Selects a font for rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-font)."
    txtFont: String
    "Sets the leading (line spacing) for rendered text. Only works on the multi-line text endpoint. Default: `0`. [See docs](https://docs.imgix.com/apis/url/typesetting/txt-lead)."
    txtLead: Int
    "Controls the level of ligature substitution. [See docs](https://docs.imgix.com/apis/url/text/txt-lig)."
    txtLig: Int
    "Outlines the rendered text with a specified color. Default: `0`. [See docs](https://docs.imgix.com/apis/url/text/txt-line)."
    txtLine: Int
    "Alias for `txtLineColor`."
    txtLineClr: String
    "Specifies a text outline color. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/text/txt-line-color)."
    txtLineColor: String
    "Specifies the padding (in device-independent pixels) between a textbox and the edges of the base image. [See docs](https://docs.imgix.com/apis/url/text/txt-pad)."
    txtPad: Int
    "Applies a shadow to rendered text. Default: `0`. [See docs](https://docs.imgix.com/apis/url/text/txt-shad)."
    txtShad: Float
    "Sets the font size of rendered text. Default: `12`. [See docs](https://docs.imgix.com/apis/url/text/txt-size)."
    txtSize: Int
    "Sets the tracking (letter spacing) for rendered text. Only works on the multi-line text endpoint. Default: `0`. [See docs](https://docs.imgix.com/apis/url/typesetting/txt-track)."
    txtTrack: Int
    "Sets the width of rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-width)."
    txtWidth: Int
    "Alias for `txtAlign`."
    txtalign: String
    "Alias for `txtClip`."
    txtclip: String
    "Alias for `txtColor`."
    txtclr: String
    "Alias for `txtColor`."
    txtcolor: String
    "Alias for `txtFit`."
    txtfit: String
    "Alias for `txtFont`."
    txtfont: String
    "Alias for `txtLead`."
    txtlead: Int
    "Alias for `txtLig`."
    txtlig: Int
    "Alias for `txtLine`."
    txtline: Int
    "Alias for `txtLineColor`."
    txtlineclr: String
    "Alias for `txtLineColor`."
    txtlinecolor: String
    "Alias for `txtPad`."
    txtpad: Int
    "Alias for `txtShad`."
    txtshad: Float
    "Alias for `txtSize`."
    txtsize: Int
    "Alias for `txtTrack`."
    txttrack: Int
    "Alias for `txtWidth`."
    txtwidth: Int
    "Sharpens the source image using an unsharp mask. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/usm)."
    usm: Int
    "Specifies the radius for an unsharp mask operation. Default: `2.5`. [See docs](https://docs.imgix.com/apis/url/adjustment/usmrad)."
    usmrad: Float
    "Adjusts the vibrance of an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/vib)."
    vib: Int
    "Adjusts the width of the output image. [See docs](https://docs.imgix.com/apis/url/size/w)."
    w: Int
    "Alias for `w`."
    width: Int
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JPGOptions {
    progressive: Boolean = true
    quality: Int
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input PNGOptions {
    compressionSpeed: Int = 4
    quality: Int
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input PrismicAboutCareersGroupTypeFilterInput {
    company_name: StringQueryOperatorInput
    description: PrismicStructuredTextTypeFilterInput
    end_date: DateQueryOperatorInput
    from_date: DateQueryOperatorInput
}

input PrismicAboutCareersGroupTypeFilterListInput {
    elemMatch: PrismicAboutCareersGroupTypeFilterInput
}

input PrismicAboutDataTypeFilterInput {
    careers: PrismicAboutCareersGroupTypeFilterListInput
    description: PrismicStructuredTextTypeFilterInput
    github_link: PrismicLinkTypeFilterInput
    name: PrismicStructuredTextTypeFilterInput
    profile: PrismicImageTypeFilterInput
}

input PrismicAboutFilterInput {
    _previewable: IDQueryOperatorInput
    alternate_languages: PrismicLinkTypeFilterListInput
    children: NodeFilterListInput
    data: PrismicAboutDataTypeFilterInput
    dataRaw: JSONQueryOperatorInput
    dataString: StringQueryOperatorInput
    first_publication_date: DateQueryOperatorInput
    href: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    lang: StringQueryOperatorInput
    last_publication_date: DateQueryOperatorInput
    parent: NodeFilterInput
    prismicId: IDQueryOperatorInput
    tags: StringQueryOperatorInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input PrismicAboutSortInput {
    fields: [PrismicAboutFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input PrismicImageDimensionsTypeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input PrismicImageFixedTypeFilterInput {
    base64: StringQueryOperatorInput
    height: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input PrismicImageFluidTypeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
}

input PrismicImageThumbnailsTypeQueryOperatorInput {
    eq: PrismicImageThumbnailsType
    in: [PrismicImageThumbnailsType]
    ne: PrismicImageThumbnailsType
    nin: [PrismicImageThumbnailsType]
}

input PrismicImageTypeFilterInput {
    alt: StringQueryOperatorInput
    copyright: StringQueryOperatorInput
    dimensions: PrismicImageDimensionsTypeFilterInput
    fixed: PrismicImageFixedTypeFilterInput
    fluid: PrismicImageFluidTypeFilterInput
    localFile: FileFilterInput
    thumbnails: PrismicImageThumbnailsTypeQueryOperatorInput
    url: StringQueryOperatorInput
}

input PrismicLinkTypeFilterInput {
    id: IDQueryOperatorInput
    isBroken: BooleanQueryOperatorInput
    lang: StringQueryOperatorInput
    link_type: PrismicLinkTypesQueryOperatorInput
    raw: JSONQueryOperatorInput
    size: IntQueryOperatorInput
    slug: StringQueryOperatorInput
    tags: StringQueryOperatorInput
    target: StringQueryOperatorInput
    type: StringQueryOperatorInput
    uid: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input PrismicLinkTypeFilterListInput {
    elemMatch: PrismicLinkTypeFilterInput
}

input PrismicLinkTypesQueryOperatorInput {
    eq: PrismicLinkTypes
    in: [PrismicLinkTypes]
    ne: PrismicLinkTypes
    nin: [PrismicLinkTypes]
}

input PrismicPostBodyHrFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    slice_label: StringQueryOperatorInput
    slice_type: StringQueryOperatorInput
}

input PrismicPostBodyHrSortInput {
    fields: [PrismicPostBodyHrFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input PrismicPostBodyImageFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    primary: PrismicPostBodyImagePrimaryTypeFilterInput
    slice_label: StringQueryOperatorInput
    slice_type: StringQueryOperatorInput
}

input PrismicPostBodyImagePrimaryTypeFilterInput {
    image: PrismicImageTypeFilterInput
}

input PrismicPostBodyImageSortInput {
    fields: [PrismicPostBodyImageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input PrismicPostBodyQuoteFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    primary: PrismicPostBodyQuotePrimaryTypeFilterInput
    slice_label: StringQueryOperatorInput
    slice_type: StringQueryOperatorInput
}

input PrismicPostBodyQuotePrimaryTypeFilterInput {
    quote: PrismicStructuredTextTypeFilterInput
}

input PrismicPostBodyQuoteSortInput {
    fields: [PrismicPostBodyQuoteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input PrismicPostBodyTextFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    primary: PrismicPostBodyTextPrimaryTypeFilterInput
    slice_label: StringQueryOperatorInput
    slice_type: StringQueryOperatorInput
}

input PrismicPostBodyTextPrimaryTypeFilterInput {
    content: PrismicStructuredTextTypeFilterInput
}

input PrismicPostBodyTextSortInput {
    fields: [PrismicPostBodyTextFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input PrismicPostDataTypeFilterInput {
    category: StringQueryOperatorInput
    cover_image: PrismicImageTypeFilterInput
    migrated_date: DateQueryOperatorInput
    title: PrismicStructuredTextTypeFilterInput
}

input PrismicPostFilterInput {
    _previewable: IDQueryOperatorInput
    alternate_languages: PrismicLinkTypeFilterListInput
    children: NodeFilterListInput
    data: PrismicPostDataTypeFilterInput
    dataRaw: JSONQueryOperatorInput
    dataString: StringQueryOperatorInput
    first_publication_date: DateQueryOperatorInput
    href: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    lang: StringQueryOperatorInput
    last_publication_date: DateQueryOperatorInput
    parent: NodeFilterInput
    prismicId: IDQueryOperatorInput
    tags: StringQueryOperatorInput
    type: StringQueryOperatorInput
    uid: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input PrismicPostSortInput {
    fields: [PrismicPostFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input PrismicStructuredTextTypeFilterInput {
    html: StringQueryOperatorInput
    raw: JSONQueryOperatorInput
    text: StringQueryOperatorInput
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
}

input SitePageContextFilterInput {
    category: StringQueryOperatorInput
    hasNext: BooleanQueryOperatorInput
    hasPrevious: BooleanQueryOperatorInput
    uid: StringQueryOperatorInput
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    componentPath: StringQueryOperatorInput
    context: SitePageContextFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
    matchPath: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
    pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: SitePluginPackageJsonFilterInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: SitePluginPluginOptionsFilterInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
    dependencies: SitePluginPackageJsonDependenciesFilterListInput
    description: StringQueryOperatorInput
    devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
    keywords: StringQueryOperatorInput
    license: StringQueryOperatorInput
    main: StringQueryOperatorInput
    name: StringQueryOperatorInput
    peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsFeedsFilterInput {
    link: StringQueryOperatorInput
    output: StringQueryOperatorInput
    query: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input SitePluginPluginOptionsFeedsFilterListInput {
    elemMatch: SitePluginPluginOptionsFeedsFilterInput
}

input SitePluginPluginOptionsFilterInput {
    allExtensions: BooleanQueryOperatorInput
    anonymize: BooleanQueryOperatorInput
    background_color: StringQueryOperatorInput
    base64Width: IntQueryOperatorInput
    cacheDigest: StringQueryOperatorInput
    cache_busting_mode: StringQueryOperatorInput
    createLinkInHead: BooleanQueryOperatorInput
    crossOrigin: StringQueryOperatorInput
    defaultQuality: IntQueryOperatorInput
    display: StringQueryOperatorInput
    failOnError: BooleanQueryOperatorInput
    feeds: SitePluginPluginOptionsFeedsFilterListInput
    head: BooleanQueryOperatorInput
    icon: StringQueryOperatorInput
    imageImgixParams: SitePluginPluginOptionsImageImgixParamsFilterInput
    imagePlaceholderImgixParams: SitePluginPluginOptionsImagePlaceholderImgixParamsFilterInput
    include_favicon: BooleanQueryOperatorInput
    isTSX: BooleanQueryOperatorInput
    jsxPragma: StringQueryOperatorInput
    legacy: BooleanQueryOperatorInput
    name: StringQueryOperatorInput
    output: StringQueryOperatorInput
    pageTransitionDelay: IntQueryOperatorInput
    path: StringQueryOperatorInput
    pathCheck: BooleanQueryOperatorInput
    policy: SitePluginPluginOptionsPolicyFilterListInput
    prismicToolbar: BooleanQueryOperatorInput
    query: StringQueryOperatorInput
    repositoryName: StringQueryOperatorInput
    respectDNT: BooleanQueryOperatorInput
    schemas: SitePluginPluginOptionsSchemasFilterInput
    short_name: StringQueryOperatorInput
    start_url: StringQueryOperatorInput
    stripMetadata: BooleanQueryOperatorInput
    theme_color: StringQueryOperatorInput
    theme_color_in_head: BooleanQueryOperatorInput
    trackingId: StringQueryOperatorInput
}

input SitePluginPluginOptionsImageImgixParamsFilterInput {
    auto: StringQueryOperatorInput
    fit: StringQueryOperatorInput
    q: IntQueryOperatorInput
}

input SitePluginPluginOptionsImagePlaceholderImgixParamsFilterInput {
    blur: IntQueryOperatorInput
    q: IntQueryOperatorInput
    w: IntQueryOperatorInput
}

input SitePluginPluginOptionsPolicyFilterInput {
    allow: StringQueryOperatorInput
    sitemap: StringQueryOperatorInput
    userAgent: StringQueryOperatorInput
}

input SitePluginPluginOptionsPolicyFilterListInput {
    elemMatch: SitePluginPluginOptionsPolicyFilterInput
}

input SitePluginPluginOptionsSchemasAboutFilterInput {
    Main: SitePluginPluginOptionsSchemasAboutMainFilterInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsCompany_nameConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsCompany_nameFilterInput {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsCompany_nameConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsDescriptionConfigFilterInput {
    label: StringQueryOperatorInput
    multi: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsDescriptionFilterInput {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsDescriptionConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsEnd_dateConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsEnd_dateFilterInput {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsEnd_dateConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFilterInput {
    company_name: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsCompany_nameFilterInput
    description: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsDescriptionFilterInput
    end_date: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsEnd_dateFilterInput
    from_date: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFrom_dateFilterInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFrom_dateConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFrom_dateFilterInput {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFrom_dateConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersConfigFilterInput {
    fields: SitePluginPluginOptionsSchemasAboutMainCareersConfigFieldsFilterInput
    label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainCareersFilterInput {
    config: SitePluginPluginOptionsSchemasAboutMainCareersConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainDescriptionConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
    single: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainDescriptionFilterInput {
    config: SitePluginPluginOptionsSchemasAboutMainDescriptionConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainFilterInput {
    careers: SitePluginPluginOptionsSchemasAboutMainCareersFilterInput
    description: SitePluginPluginOptionsSchemasAboutMainDescriptionFilterInput
    github_link: SitePluginPluginOptionsSchemasAboutMainGithub_linkFilterInput
    name: SitePluginPluginOptionsSchemasAboutMainNameFilterInput
    profile: SitePluginPluginOptionsSchemasAboutMainProfileFilterInput
}

input SitePluginPluginOptionsSchemasAboutMainGithub_linkConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainGithub_linkFilterInput {
    config: SitePluginPluginOptionsSchemasAboutMainGithub_linkConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainNameConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
    single: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainNameFilterInput {
    config: SitePluginPluginOptionsSchemasAboutMainNameConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainProfileConfigConstraintFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainProfileConfigFilterInput {
    constraint: SitePluginPluginOptionsSchemasAboutMainProfileConfigConstraintFilterInput
    label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasAboutMainProfileFilterInput {
    config: SitePluginPluginOptionsSchemasAboutMainProfileConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasFilterInput {
    about: SitePluginPluginOptionsSchemasAboutFilterInput
    post: SitePluginPluginOptionsSchemasPostFilterInput
}

input SitePluginPluginOptionsSchemasPostFilterInput {
    Main: SitePluginPluginOptionsSchemasPostMainFilterInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesFilterInput {
    hr: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesHrFilterInput
    image: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageFilterInput
    quote: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteFilterInput
    text: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextFilterInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesHrFilterInput {
    description: StringQueryOperatorInput
    display: StringQueryOperatorInput
    fieldset: StringQueryOperatorInput
    icon: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageFilterInput {
    description: StringQueryOperatorInput
    display: StringQueryOperatorInput
    fieldset: StringQueryOperatorInput
    icon: StringQueryOperatorInput
    non_repeat: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatFilterInput {
    image: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageFilterInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageConfigConstraintFilterInput {
    width: IntQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageConfigFilterInput {
    constraint: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageConfigConstraintFilterInput
    label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageFilterInput {
    config: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesImageNon_repeatImageConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteFilterInput {
    description: StringQueryOperatorInput
    fieldset: StringQueryOperatorInput
    icon: StringQueryOperatorInput
    non_repeat: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatFilterInput {
    quote: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatQuoteFilterInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatQuoteConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
    single: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatQuoteFilterInput {
    config: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesQuoteNon_repeatQuoteConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextFilterInput {
    description: StringQueryOperatorInput
    display: StringQueryOperatorInput
    fieldset: StringQueryOperatorInput
    icon: StringQueryOperatorInput
    non_repeat: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatContentConfigFilterInput {
    label: StringQueryOperatorInput
    multi: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatContentFilterInput {
    config: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatContentConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatFilterInput {
    content: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesTextNon_repeatContentFilterInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigFilterInput {
    choices: SitePluginPluginOptionsSchemasPostMainBodyConfigChoicesFilterInput
    labels: SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsFilterInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsFilterInput {
    hr: SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsHrFilterListInput
    text: SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsTextFilterListInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsHrFilterInput {
    display: StringQueryOperatorInput
    name: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsHrFilterListInput {
    elemMatch: SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsHrFilterInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsTextFilterInput {
    display: StringQueryOperatorInput
    name: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsTextFilterListInput {
    elemMatch: SitePluginPluginOptionsSchemasPostMainBodyConfigLabelsTextFilterInput
}

input SitePluginPluginOptionsSchemasPostMainBodyFilterInput {
    config: SitePluginPluginOptionsSchemasPostMainBodyConfigFilterInput
    fieldset: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainCategoryConfigFilterInput {
    default_value: StringQueryOperatorInput
    label: StringQueryOperatorInput
    options: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainCategoryFilterInput {
    config: SitePluginPluginOptionsSchemasPostMainCategoryConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainCover_imageConfigConstraintFilterInput {
    width: IntQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainCover_imageConfigFilterInput {
    constraint: SitePluginPluginOptionsSchemasPostMainCover_imageConfigConstraintFilterInput
    label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainCover_imageFilterInput {
    config: SitePluginPluginOptionsSchemasPostMainCover_imageConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainFilterInput {
    body: SitePluginPluginOptionsSchemasPostMainBodyFilterInput
    category: SitePluginPluginOptionsSchemasPostMainCategoryFilterInput
    cover_image: SitePluginPluginOptionsSchemasPostMainCover_imageFilterInput
    migrated_date: SitePluginPluginOptionsSchemasPostMainMigrated_dateFilterInput
    title: SitePluginPluginOptionsSchemasPostMainTitleFilterInput
    uid: SitePluginPluginOptionsSchemasPostMainUidFilterInput
}

input SitePluginPluginOptionsSchemasPostMainMigrated_dateConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainMigrated_dateFilterInput {
    config: SitePluginPluginOptionsSchemasPostMainMigrated_dateConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainTitleConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
    single: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainTitleFilterInput {
    config: SitePluginPluginOptionsSchemasPostMainTitleConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainUidConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasPostMainUidFilterInput {
    config: SitePluginPluginOptionsSchemasPostMainUidConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
    author: StringQueryOperatorInput
    description: StringQueryOperatorInput
    siteUrl: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}

input TransformOptions {
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    rotate: Int = 0
    trim: Float = 0.0
}

input WebPOptions {
    quality: Int
}


"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

scalar PrismicImageThumbnailsType
